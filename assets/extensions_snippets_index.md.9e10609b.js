import{_ as s,o as e,c as n,d as t}from"./app.88375fe2.js";const a="/assets/text-editor-snippets.a0413782.png",o="/assets/tree-editor-snippets.96c3ab6c.png",g=JSON.parse('{"title":"\u{1F517} Snippets","description":"Learn about snippets and how to create your own.","frontmatter":{"title":"\u{1F517} Snippets","description":"Learn about snippets and how to create your own.","sidebar":"snippets","nav_order":-1},"headers":[{"level":2,"title":"Basics","slug":"basics"},{"level":2,"title":"Using Snippets","slug":"using-snippets"},{"level":3,"title":"Text Editor","slug":"text-editor"},{"level":3,"title":"Tree Editor","slug":"tree-editor"},{"level":2,"title":"Creating A Snippet","slug":"creating-a-snippet"},{"level":3,"title":"Setup","slug":"setup"},{"level":3,"title":"Writing The Snippet","slug":"writing-the-snippet"}],"relativePath":"extensions/snippets/index.md","lastUpdated":1666126402000}'),p={name:"extensions/snippets/index.md"},l=t('<h1 id="\u{1F517}-snippets" tabindex="-1">\u{1F517} Snippets <a class="header-anchor" href="#\u{1F517}-snippets" aria-hidden="true">#</a></h1><p>This article will go over bridge.&#39;s snippet system.</p><p>In this article you will learn the following:</p><p>\u2611\uFE0F What is a snippet?<br> \u2611\uFE0F How to use a snippet within bridge.<br> \u2611\uFE0F How to create your own snippet.<br></p><h2 id="basics" tabindex="-1">Basics <a class="header-anchor" href="#basics" aria-hidden="true">#</a></h2><p>Essentially a snippet is a piece of text that a user can quickly insert into any file; they can be used in any both JSON file types and text based file types, such as functions and scripts. Snippets can be created through bridge.&#39;s extension API and you&#39;ll find out how below!</p><h2 id="using-snippets" tabindex="-1">Using Snippets <a class="header-anchor" href="#using-snippets" aria-hidden="true">#</a></h2><p>By default, bridge. doesn&#39;t ship with any snippets built in. Instead, you need to <a href="/extensions/index.html#installing-extensions">download an extension</a> from bridge.&#39;s extension store that includes snippets, or <a href="#creating-a-snippet">make your own</a>. Once installed it is easy to use these snippets, and usage in both bridge.&#39;s text editor and tree editor are described below.</p><h3 id="text-editor" tabindex="-1">Text Editor <a class="header-anchor" href="#text-editor" aria-hidden="true">#</a></h3><p>In bridge.&#39;s text editor you need to select a valid location where the snippet can be inserted. Then in the auto-completions list (which you can force with <code>ctrl + space</code>), you will find your snippets, as shown in the image below.</p><p><img src="'+a+'" alt="A screenshot showing snippets in the text editor"></p><h3 id="tree-editor" tabindex="-1">Tree Editor <a class="header-anchor" href="#tree-editor" aria-hidden="true">#</a></h3><p>In bridge.&#39;s tree editor, similarly to the text editor, you need to select the node in the tree which accepts the snippet and it will show up in auto-completions automatically, as shown in the image below.</p><p><img src="'+o+`" alt="A screenshot showing snippets in the tree editor"></p><h2 id="creating-a-snippet" tabindex="-1">Creating A Snippet <a class="header-anchor" href="#creating-a-snippet" aria-hidden="true">#</a></h2><h3 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-hidden="true">#</a></h3><p>In order to get started with creating a snippet, you need to set up a valid <a href="/extensions/index.html#creating-extensions">extension</a> to contain your snippets. Once this is done, you can begin by creating a <code>snippets</code> folder inside of your extension&#39;s folder.</p><p>Inside of this <code>snippets</code> folder we will create a new file for each snippet. Our example snippet here will be called <code>exampleSnippet.json</code> for simplicity.</p><div class="language-text"><button class="copy"></button><span class="lang">text</span><pre><code><span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500 \u{1F4C1} snippets</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">\u2502  \u2514\u2500 \u{1F4DD} exampleSnippet.json</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="writing-the-snippet" tabindex="-1">Writing The Snippet <a class="header-anchor" href="#writing-the-snippet" aria-hidden="true">#</a></h3><p>In our new snippet file, we will write the following:</p><div class="language-json"><button class="copy"></button><span class="lang">json</span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Example Snippet</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">description</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">This adds a damage sensor that makes the entity invulnerable.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">fileTypes</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">entity</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">locations</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">minecraft:entity/components</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">minecraft:entity/component_groups/*</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">minecraft:damage_sensor</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">triggers</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">deals_damage</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}]</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Now let&#39;s go through the different fields that we have used here:</p><ul><li>The <a href="/extensions/snippets/documentation.html#name"><code>name</code></a> and <a href="/extensions/snippets/documentation.html#description"><code>description</code></a> fields are used to tell bridge. how both the text and tree editor should display your snippet within auto-completions.</li><li><a href="/extensions/snippets/documentation.html#filetypes"><code>fileTypes</code></a> and <a href="/extensions/snippets/documentation.html#locations"><code>locations</code></a> tell bridge. where your snippet is allowed to be inserted into a file.</li><li><a href="/extensions/snippets/documentation.html#data"><code>data</code></a> defines what data to insert into the file when the snippet is used.</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Make sure to read through our detailed <a href="/extensions/snippets/documentation">snippet documentation</a>!</p></div>`,25),i=[l];function r(c,d,h,D,y,u){return e(),n("div",null,i)}const C=s(p,[["render",r]]);export{g as __pageData,C as default};
