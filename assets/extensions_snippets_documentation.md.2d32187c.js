import{_ as s,o as n,c as a,d as e}from"./app.2cdd2a5e.js";const u=JSON.parse(`{"title":"\u{1F4DD} Documentation","description":"Read about what properties make up a snippet's JSON file.","frontmatter":{"title":"\u{1F4DD} Documentation","description":"Read about what properties make up a snippet's JSON file.","sidebar":"snippets"},"headers":[{"level":2,"title":"name","slug":"name"},{"level":2,"title":"description","slug":"description"},{"level":2,"title":"targetFormatVersion","slug":"targetformatversion"},{"level":2,"title":"fileTypes","slug":"filetypes"},{"level":2,"title":"locations","slug":"locations"},{"level":2,"title":"data","slug":"data"}],"relativePath":"extensions/snippets/documentation.md","lastUpdated":1663264713000}`),o={name:"extensions/snippets/documentation.md"},l=e(`<h1 id="\u{1F4DD}-snippet-documentation" tabindex="-1">\u{1F4DD} Snippet Documentation <a class="header-anchor" href="#\u{1F4DD}-snippet-documentation" aria-hidden="true">#</a></h1><p>A snipper file should contain some information on how to display your snippet as well as what data it should insert into the user&#39;s file.</p><h2 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-hidden="true">#</a></h2><ul><li>Type: <code>string</code></li><li>Required: \u2705</li></ul><p>This states the name of your snippet and will be used by bridge. to display your snippet inside of the auto-completions list. This should be something that the user can find your snippet with.</p><div class="language-json"><button class="copy"></button><span class="lang">json</span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Snippet: Entity Melee Attack</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="description" tabindex="-1">description <a class="header-anchor" href="#description" aria-hidden="true">#</a></h2><ul><li>Type: <code>string</code></li><li>Required: \u{1F6AB}</li></ul><p>Here you can set a short description of what your snippet will add to the file.</p><div class="language-json"><button class="copy"></button><span class="lang">json</span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">description</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Adds entity attacking behaviors.</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="targetformatversion" tabindex="-1">targetFormatVersion <a class="header-anchor" href="#targetformatversion" aria-hidden="true">#</a></h2><ul><li>Type: <code>{ min?: string; max?: string }</code></li><li>Required: :no_entry_sign</li></ul><p>This field allows you to specifiy which target Minecraft versions that your snippet should be compatible with. The given <code>min</code> and <code>max</code> values will be used to compare with the target version that is set in the user&#39;s config. This is useful for stopping your snippet from being used with versions where the syntax may be invalid.</p><div class="language-json"><button class="copy"></button><span class="lang">json</span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">targetFormatVersion</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">min</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.16.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">max</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.18.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="filetypes" tabindex="-1">fileTypes <a class="header-anchor" href="#filetypes" aria-hidden="true">#</a></h2><ul><li>Type: <code>string[]</code></li><li>Required: \u2705</li></ul><p>This should define the <a href="/extensions/misc/file-types">ids of the file types</a> that your snippet is able to be used in.</p><div class="language-json"><button class="copy"></button><span class="lang">json</span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">fileTypes</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">entity</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="locations" tabindex="-1">locations <a class="header-anchor" href="#locations" aria-hidden="true">#</a></h2><ul><li>Type: <code>string[]</code></li><li>Required: \u{1F6AB}</li></ul><p>This states the locations inside of a JSON file where the snippet should be allowed. It should be a list of glob patterns that specify where the snippet is permitted.</p><div class="language-json"><button class="copy"></button><span class="lang">json</span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">locations</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">minecraft:entity/components</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">minecraft:entity/component_groups/*</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="data" tabindex="-1">data <a class="header-anchor" href="#data" aria-hidden="true">#</a></h2><ul><li>Type: <code>any</code></li><li>Required: \u2705</li></ul><p>The data that your snippet should insert is defined here; if it is a JSON file then it should be an object, but for text files, it should be a string to be inserted into the file.</p><div class="language-json"><button class="copy"></button><span class="lang">json</span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">minecraft:behavior.look_at_player</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">priority</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-json"><button class="copy"></button><span class="lang">json</span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"># Hello World</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">say test</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,27),t=[l];function p(i,c,r,D,y,d){return n(),a("div",null,t)}const h=s(o,[["render",p]]);export{u as __pageData,h as default};
