import{_ as e,o as t,c as a,i as o}from"./app.13fe09d4.js";const p=JSON.parse('{"title":"@bridge/theme","description":"","frontmatter":{"title":"@bridge/theme","description":"","sidebar":"scripts"},"headers":[{"level":2,"title":"Functions","slug":"functions"},{"level":3,"title":"getColor","slug":"getcolor"},{"level":3,"title":"getCurrentMode","slug":"getcurrentmode"},{"level":3,"title":"getHighlighterInfo","slug":"gethighlighterinfo"},{"level":3,"title":"onChange","slug":"onchange"}],"relativePath":"extensions/scripts/modules/bridge-theme.md","lastUpdated":1657872722000}'),r={name:"extensions/scripts/modules/bridge-theme.md"},d=o('<h1 id="bridge-theme" tabindex="-1">@bridge/theme <a class="header-anchor" href="#bridge-theme" aria-hidden="true">#</a></h1><p>Module that allows you to access the current theme and react to when it changes.</p><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-hidden="true">#</a></h2><h3 id="getcolor" tabindex="-1">getColor <a class="header-anchor" href="#getcolor" aria-hidden="true">#</a></h3><p>\u25B8 <strong>getColor</strong>(<code>name</code>): <code>string</code></p><p>Get the color code of the given color name, from the current theme.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><a href="/extensions/scripts/index.html#tcolorname"><code>TColorName</code></a></td><td style="text-align:left;">The name of the color to get.</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h4><p><code>string</code></p><hr><h3 id="getcurrentmode" tabindex="-1">getCurrentMode <a class="header-anchor" href="#getcurrentmode" aria-hidden="true">#</a></h3><p>\u25B8 <strong>getCurrentMode</strong>(): <code>&quot;light&quot;</code> | <code>&quot;dark&quot;</code></p><p>Gets the current theme mode.</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h4><p><code>&quot;light&quot;</code> | <code>&quot;dark&quot;</code></p><hr><h3 id="gethighlighterinfo" tabindex="-1">getHighlighterInfo <a class="header-anchor" href="#gethighlighterinfo" aria-hidden="true">#</a></h3><p>\u25B8 <strong>getHighlighterInfo</strong>(<code>name</code>): { <code>background?</code>: <code>string</code> ; <code>color?</code>: <code>string</code> ; <code>isItalic?</code>: <code>boolean</code> ; <code>textDecoration?</code>: <code>string</code> } | <code>undefined</code></p><p>Get the highlighter info of a give color name.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-hidden="true">#</a></h4><p>{ <code>background?</code>: <code>string</code> ; <code>color?</code>: <code>string</code> ; <code>isItalic?</code>: <code>boolean</code> ; <code>textDecoration?</code>: <code>string</code> } | <code>undefined</code></p><hr><h3 id="onchange" tabindex="-1">onChange <a class="header-anchor" href="#onchange" aria-hidden="true">#</a></h3><p>\u25B8 <strong>onChange</strong>(<code>func</code>): <a href="./../interfaces/idisposable.html"><code>IDisposable</code></a></p><p>Create a callback to be called when the given theme mode changes theme.</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>func</code></td><td style="text-align:left;">(<code>mode</code>: <code>&quot;dark&quot;</code> | <code>&quot;light&quot;</code>) =&gt; <code>void</code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-hidden="true">#</a></h4><p><a href="./../interfaces/idisposable.html"><code>IDisposable</code></a></p>',32),n=[d];function c(h,i,s,l,g,u){return t(),a("div",null,n)}var m=e(r,[["render",c]]);export{p as __pageData,m as default};
