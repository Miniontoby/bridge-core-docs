import{_ as e,o as a,c as n,i as t}from"./app.59ab206f.js";const m=JSON.parse('{"title":"Custom MoLang","description":"","frontmatter":{"description":"","sidebar":"compiler"},"headers":[{"level":2,"title":"Creating","slug":"creating"},{"level":2,"title":"Using","slug":"using"}],"relativePath":"extensions/custom-molang.md","lastUpdated":1657800483000}'),s={name:"extensions/custom-molang.md"},o=t(`<h1 id="custom-molang" tabindex="-1">Custom MoLang <a class="header-anchor" href="#custom-molang" aria-hidden="true">#</a></h1><p>Custom MoLang allows you to write MoLang functions that can be used across an entire project wherever MoLang is valid.</p><h2 id="creating" tabindex="-1">Creating <a class="header-anchor" href="#creating" aria-hidden="true">#</a></h2><p>To get started, open the preset window and select the <code>Molang</code> tab, enter the file name and click &quot;Create&quot;. Outside of bridge., you can create a <code>.molang</code> file in the <code>BP/molang</code> directory.</p><p>Inside of this file, you can define functions like this:</p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">function(&#39;sq&#39;, &#39;base&#39;, {</span></span>
<span class="line"><span style="color:#A6ACCD;">    return math.pow(arg.base, 3);</span></span>
<span class="line"><span style="color:#A6ACCD;">});</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>This first argument of <code>function()</code> should be the function name and any other arguments are function arguments which can be accessing within the function with <code>arg.&lt;argName&gt;</code>.</p><h2 id="using" tabindex="-1">Using <a class="header-anchor" href="#using" aria-hidden="true">#</a></h2><p>Using custom MoLang functions is as simple as writing <code>f.funcName(&#39;arg1&#39;, &#39;arg2&#39;)</code> where MoLang is valid. This example would then replace the function with <code>arg1</code> and <code>arg2</code> input into the <code>funcName</code> function.</p>`,9),i=[o];function c(r,d,l,p,u,h){return a(),n("div",null,i)}var f=e(s,[["render",c]]);export{m as __pageData,f as default};
