import{_ as t,o as e,c as d,d as o}from"./app.2cdd2a5e.js";const p=JSON.parse('{"title":"\u{1F4C4} File Types","description":"Reference documentation of all available file types.","frontmatter":{"title":"\u{1F4C4} File Types","description":"Reference documentation of all available file types.","sidebar":"misc"},"headers":[{"level":2,"title":"Basics","slug":"basics"},{"level":2,"title":"Default File Types","slug":"default-file-types"},{"level":3,"title":"BP","slug":"bp"},{"level":3,"title":"Single Instance BP Files","slug":"single-instance-bp-files"},{"level":3,"title":"RP","slug":"rp"},{"level":3,"title":"Single Instance RP Files","slug":"single-instance-rp-files"},{"level":3,"title":"SP","slug":"sp"},{"level":3,"title":"WT","slug":"wt"},{"level":3,"title":"Custom bridge. Files","slug":"custom-bridge-files"}],"relativePath":"extensions/misc/file-types.md","lastUpdated":1663851951000}'),r={name:"extensions/misc/file-types.md"},i=o('<h1 id="\u{1F4C4}-file-types" tabindex="-1">\u{1F4C4} File Types <a class="header-anchor" href="#\u{1F4C4}-file-types" aria-hidden="true">#</a></h1><p>When working with bridge., it can be useful to know how bridge. distinguishes between different file types.</p><h2 id="basics" tabindex="-1">Basics <a class="header-anchor" href="#basics" aria-hidden="true">#</a></h2><p>bridge. ships with a number of file definitions built-in. File definitions are the glue code that connects data for &quot;Go to Definition&quot;, code completion, diagnostics, file type guessing and more. Additionally, every file definition assigns a file type identifier to each of Minecraft&#39;s file types.</p><h2 id="default-file-types" tabindex="-1">Default File Types <a class="header-anchor" href="#default-file-types" aria-hidden="true">#</a></h2><p>You can find all of bridge.&#39;s default file type identifiers below.</p><h3 id="bp" tabindex="-1">BP <a class="header-anchor" href="#bp" aria-hidden="true">#</a></h3><table><thead><tr><th>File Type ID</th><th>Path</th></tr></thead><tbody><tr><td><code>animation</code></td><td>BP/animations/</td></tr><tr><td><code>animationController</code></td><td>BP/animation_controllers/</td></tr><tr><td><code>biome</code></td><td>BP/biomes/</td></tr><tr><td><code>block</code></td><td>BP/blocks/</td></tr><tr><td><code>dialogue</code></td><td>BP/dialogue/</td></tr><tr><td><code>dimension</code></td><td>BP/dimensions/</td></tr><tr><td><code>entity</code></td><td>BP/entities/</td></tr><tr><td><code>feature</code></td><td>BP/features/</td></tr><tr><td><code>featureRule</code></td><td>BP/feature_rules/</td></tr><tr><td><code>function</code></td><td>BP/functions/</td></tr><tr><td><code>gameTest</code></td><td>BP/scripts/</td></tr><tr><td><code>item</code></td><td>BP/items/</td></tr><tr><td><code>lootTable</code></td><td>BP/loot_tables/</td></tr><tr><td><code>lang</code></td><td>BP/texts/</td></tr><tr><td><code>mcstructure</code></td><td>BP/structures/</td></tr><tr><td><code>recipe</code></td><td>BP/recipes/</td></tr><tr><td><code>spawnRule</code></td><td>BP/spawn_rules/</td></tr><tr><td><code>tradeTable</code></td><td>BP/trading/</td></tr><tr><td><code>volume</code></td><td>BP/volumes/</td></tr></tbody></table><h3 id="single-instance-bp-files" tabindex="-1">Single Instance BP Files <a class="header-anchor" href="#single-instance-bp-files" aria-hidden="true">#</a></h3><table><thead><tr><th>File Type ID</th><th>Path</th></tr></thead><tbody><tr><td><code>langDef</code></td><td>BP/texts/languages.json</td></tr><tr><td><code>manifest</code></td><td>BP/manifest.json</td></tr><tr><td><code>functionTick</code></td><td>BP/functions/tick.json</td></tr></tbody></table><h3 id="rp" tabindex="-1">RP <a class="header-anchor" href="#rp" aria-hidden="true">#</a></h3><table><thead><tr><th>File Type ID</th><th>Path</th></tr></thead><tbody><tr><td><code>attachable</code></td><td>RP/attachables/</td></tr><tr><td><code>clientAnimation</code></td><td>RP/animations/</td></tr><tr><td><code>clientAnimationController</code></td><td>RP/animation_controllers/</td></tr><tr><td><code>clientEntity</code></td><td>RP/entity/</td></tr><tr><td><code>clientItem</code></td><td>RP/items/</td></tr><tr><td><code>clientLang</code></td><td>RP/texts/</td></tr><tr><td><code>fog</code></td><td>RP/fogs/</td></tr><tr><td><code>geometry</code></td><td>RP/models/entity/, RP/models/blocks/</td></tr><tr><td><code>material</code></td><td>RP/materials/</td></tr><tr><td><code>particle</code></td><td>RP/particles/</td></tr><tr><td><code>renderController</code></td><td>RP/render_controllers/</td></tr><tr><td><code>texture</code></td><td>RP/textures/</td></tr><tr><td><code>textureSet</code></td><td>RP/textures/blocks/</td></tr><tr><td><code>ui</code></td><td>RP/ui/</td></tr></tbody></table><h3 id="single-instance-rp-files" tabindex="-1">Single Instance RP Files <a class="header-anchor" href="#single-instance-rp-files" aria-hidden="true">#</a></h3><table><thead><tr><th>File Type ID</th><th>Path</th></tr></thead><tbody><tr><td><code>clientBiome</code></td><td>RP/biomes_client.json</td></tr><tr><td><code>clientBlock</code></td><td>RP/blocks.json</td></tr><tr><td><code>clientManifest</code></td><td>RP/manifest.json</td></tr><tr><td><code>clientSound</code></td><td>RP/sounds.json</td></tr><tr><td><code>flipbookTexture</code></td><td>RP/textures/flipbook_textures.json</td></tr><tr><td><code>geometry</code></td><td>RP/models/mobs.json</td></tr><tr><td><code>itemTexture</code></td><td>RP/textures/item_texture.json</td></tr><tr><td><code>langDef</code></td><td>RP/texts/languages.json</td></tr><tr><td><code>musicDefinition</code></td><td>RP/sounds/music_definitions.json</td></tr><tr><td><code>soundDefinition</code></td><td>RP/sounds/sound_definitions.json</td></tr><tr><td><code>terrainTexture</code></td><td>RP/textures/terrain_texture.json</td></tr></tbody></table><h3 id="sp" tabindex="-1">SP <a class="header-anchor" href="#sp" aria-hidden="true">#</a></h3><table><thead><tr><th>File Type ID</th><th>Path</th></tr></thead><tbody><tr><td><code>lang</code></td><td>SP/texts/</td></tr><tr><td><code>skinManifest</code></td><td>SP/manifest.json</td></tr><tr><td><code>skins</code></td><td>SP/skins.json</td></tr></tbody></table><h3 id="wt" tabindex="-1">WT <a class="header-anchor" href="#wt" aria-hidden="true">#</a></h3><table><thead><tr><th>File Type ID</th><th>Path</th></tr></thead><tbody><tr><td><code>volume</code></td><td>WT/volumes/</td></tr><tr><td><code>worldManifest</code></td><td>WT/manifest.json</td></tr></tbody></table><h3 id="custom-bridge-files" tabindex="-1">Custom bridge. Files <a class="header-anchor" href="#custom-bridge-files" aria-hidden="true">#</a></h3><table><thead><tr><th>File Type Id</th><th>Path</th></tr></thead><tbody><tr><td><code>customComponent</code></td><td>BP/components/</td></tr><tr><td><code>bridgeConfig</code></td><td>config.json</td></tr><tr><td><code>customCommand</code></td><td>BP/commands/</td></tr><tr><td><code>molang</code></td><td>BP/molang/, RP/molang/</td></tr><tr><td><code>extensionManifest</code></td><td></td></tr><tr><td><code>presetManifest</code></td><td></td></tr><tr><td><code>theme</code></td><td></td></tr><tr><td><code>molangAstScript</code></td><td>BP/scripts/molang/</td></tr></tbody></table>',20),a=[i];function s(n,c,l,h,f,u){return e(),d("div",null,a)}const m=t(r,[["render",s]]);export{p as __pageData,m as default};
