import{_ as e,o as t,c as d,h as a}from"./app.cfabe104.js";const w=JSON.parse('{"title":"@bridge/windows","description":"","frontmatter":{"title":"@bridge/windows","description":"","sidebar":"scripts"},"headers":[{"level":2,"title":"Variables","slug":"variables"},{"level":3,"title":"BaseWindow","slug":"basewindow"},{"level":2,"title":"Functions","slug":"functions"},{"level":3,"title":"createConfirmWindow","slug":"createconfirmwindow"},{"level":3,"title":"createDropdownWindow","slug":"createdropdownwindow"},{"level":3,"title":"createInformationWindow","slug":"createinformationwindow"},{"level":3,"title":"createInputWindow","slug":"createinputwindow"},{"level":3,"title":"createWindow","slug":"createwindow"}],"relativePath":"extensions/scripts/modules/bridge-windows.md","lastUpdated":1657797531000}'),o={name:"extensions/scripts/modules/bridge-windows.md"},n=a('<h1 id="bridge-windows" tabindex="-1">@bridge/windows <a class="header-anchor" href="#bridge-windows" aria-hidden="true">#</a></h1><p>Module that provides access to bridge&#39;s window system.</p><h2 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-hidden="true">#</a></h2><h3 id="basewindow" tabindex="-1">BaseWindow <a class="header-anchor" href="#basewindow" aria-hidden="true">#</a></h3><p>\u2022 <code>Const</code> <strong>BaseWindow</strong>: <code>any</code></p><p><strong><code>link</code></strong> <a href="https://github.com/bridge-core/editor/blob/main/src/components/Windows/BaseWindow.ts" target="_blank" rel="noopener noreferrer">https://github.com/bridge-core/editor/blob/main/src/components/Windows/BaseWindow.ts</a></p><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-hidden="true">#</a></h2><h3 id="createconfirmwindow" tabindex="-1">createConfirmWindow <a class="header-anchor" href="#createconfirmwindow" aria-hidden="true">#</a></h3><p>\u25B8 <strong>createConfirmWindow</strong>(<code>displayContent</code>, <code>confirmText</code>, <code>cancelText</code>, <code>onConfirm</code>, <code>onCancel</code>): <code>void</code></p><p>Creates a confirm window and displays it.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>displayContent</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Text content of the window.</td></tr><tr><td style="text-align:left;"><code>confirmText</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Text to show on the confirm button.</td></tr><tr><td style="text-align:left;"><code>cancelText</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Text to show on the cancel button.</td></tr><tr><td style="text-align:left;"><code>onConfirm</code></td><td style="text-align:left;">() =&gt; <code>void</code></td><td style="text-align:left;">Callback to run when the confirm button is pressed.</td></tr><tr><td style="text-align:left;"><code>onCancel</code></td><td style="text-align:left;">() =&gt; <code>void</code></td><td style="text-align:left;">Callback to run when the cancel button is pressed.</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h4><p><code>void</code></p><hr><h3 id="createdropdownwindow" tabindex="-1">createDropdownWindow <a class="header-anchor" href="#createdropdownwindow" aria-hidden="true">#</a></h3><p>\u25B8 <strong>createDropdownWindow</strong>(<code>displayName</code>, <code>placeholder</code>, <code>options</code>, <code>defaultSelected</code>, <code>onConfirm</code>): <code>void</code></p><p>Creates a new dropdown window and displays it.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>displayName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Title of the window.</td></tr><tr><td style="text-align:left;"><code>placeholder</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Placeholder text of the dropdown input.</td></tr><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><code>string</code>[]</td><td style="text-align:left;">List of options to be available in the dropdown.</td></tr><tr><td style="text-align:left;"><code>defaultSelected</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The value from &#39;options&#39; that should be selected by default.</td></tr><tr><td style="text-align:left;"><code>onConfirm</code></td><td style="text-align:left;">(<code>input</code>: <code>string</code>) =&gt; <code>void</code></td><td style="text-align:left;">Callback to run when the confirm button is pressed.</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h4><p><code>void</code></p><hr><h3 id="createinformationwindow" tabindex="-1">createInformationWindow <a class="header-anchor" href="#createinformationwindow" aria-hidden="true">#</a></h3><p>\u25B8 <strong>createInformationWindow</strong>(<code>displayName</code>, <code>displayContent</code>): <code>void</code></p><p>Creates a new information window and displays it.</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>displayName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Title of the window.</td></tr><tr><td style="text-align:left;"><code>displayContent</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Text content of the window.</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-hidden="true">#</a></h4><p><code>void</code></p><hr><h3 id="createinputwindow" tabindex="-1">createInputWindow <a class="header-anchor" href="#createinputwindow" aria-hidden="true">#</a></h3><p>\u25B8 <strong>createInputWindow</strong>(<code>displayName</code>, <code>inputLabel</code>, <code>defaultValue</code>, <code>onConfirm</code>, <code>expandText?</code>): <code>void</code></p><p>Create a new input window and displays it.</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>displayName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Title of the window.</td></tr><tr><td style="text-align:left;"><code>inputLabel</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Label to show on the input.</td></tr><tr><td style="text-align:left;"><code>defaultValue</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Default value of the input.</td></tr><tr><td style="text-align:left;"><code>onConfirm</code></td><td style="text-align:left;">(<code>input</code>: <code>string</code>) =&gt; <code>void</code></td><td style="text-align:left;">Callback to run when the confirm button is pressed.</td></tr><tr><td style="text-align:left;"><code>expandText?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Text to append to the input.</td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-hidden="true">#</a></h4><p><code>void</code></p><hr><h3 id="createwindow" tabindex="-1">createWindow <a class="header-anchor" href="#createwindow" aria-hidden="true">#</a></h3><p>\u25B8 <strong>createWindow</strong>(<code>vueComponent</code>, <code>state</code>): <code>any</code></p><p><strong><code>deprecated</code></strong> Calling &quot;createWindow&quot; is deprecated. Please replace direct function calls by defining a class based window instead.</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>vueComponent</code></td><td style="text-align:left;"><code>any</code></td></tr><tr><td style="text-align:left;"><code>state</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;</td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-hidden="true">#</a></h4><p><code>any</code></p>',46),r=[n];function i(l,s,c,h,f,p){return t(),d("div",null,r)}var x=e(o,[["render",i]]);export{w as __pageData,x as default};
