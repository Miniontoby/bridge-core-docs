import{_ as s,o as n,c as a,d as e}from"./app.2cdd2a5e.js";const A=JSON.parse('{"title":"\u{1F9FE} Preset Scripts","description":"Learn about how advanced presets can utilize preset scripts and how to make them.","frontmatter":{"title":"\u{1F9FE} Preset Scripts","description":"Learn about how advanced presets can utilize preset scripts and how to make them.","sidebar":"presets"},"headers":[{"level":2,"title":"Overview","slug":"overview"},{"level":2,"title":"Creating A Preset Script","slug":"creating-a-preset-script"},{"level":2,"title":"Handling Input Fields","slug":"handling-input-fields"},{"level":3,"title":"Text field","slug":"text-field"},{"level":3,"title":"File Input","slug":"file-input"},{"level":3,"title":"Number Input","slug":"number-input"},{"level":3,"title":"Switch Input","slug":"switch-input"},{"level":3,"title":"Select Input","slug":"select-input"}],"relativePath":"extensions/presets/preset-scripts.md","lastUpdated":1663851951000}'),l={name:"extensions/presets/preset-scripts.md"},p=e(`<h1 id="\u{1F9FE}-preset-scripts" tabindex="-1">\u{1F9FE} Preset Scripts <a class="header-anchor" href="#\u{1F9FE}-preset-scripts" aria-hidden="true">#</a></h1><p>This article will go over preset scripts; an advanced way of creating presets.</p><p>In this page you will learn the following:</p><p>\u2611\uFE0F What is a preset script?<br> \u2611\uFE0F How to create a preset script.<br> \u2611\uFE0F How presets scripts can be used in conjunction with advanced preset inputs.<br></p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-hidden="true">#</a></h2><p>A preset script is a JavaScript file that allow for more complex file creation in a preset. They are essential when using complex <a href="/extensions/presets/manifest/index.html#fields">input fields</a> as they allows you to handle file and boolean inputs correctly, for example.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>You must have knowledge of JavaScript before creating a preset script.</p></div><h2 id="creating-a-preset-script" tabindex="-1">Creating A Preset Script <a class="header-anchor" href="#creating-a-preset-script" aria-hidden="true">#</a></h2><p>To get started with preset scripts, you must first have a valid <a href="/extensions/presets/">preset</a> created. Once you have done this, you can create a JavaScript file inside of your preset&#39;s folder, you can name this whatever you like.</p><div class="language-txt"><button class="copy"></button><span class="lang">txt</span><pre><code><span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500 \u{1F4C1} presets</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502  \u251C\u2500 \u{1F4C1} simpleEntity</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502  \u2502  \u251C\u2500 \u{1F4DD} manifest.json</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502  \u2502  \u251C\u2500 \u{1F4C4} entity.json</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502  \u2502  \u251C\u2500 \u{1F4C4} clientEntity.json</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">\u2502  \u2502  \u2514\u2500 \u{1F9FE} myScript.js</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Inside of this file, you should assign <code>module.exports</code> as a function of type <code>PresetScript</code>, which is described below.</p><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IPresetScriptContext</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span></span>
<span class="line"></span></code></pre></div><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IPresetScriptContext</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;">	 * Creates a file at the specified path</span></span>
<span class="line"><span style="color:#676E95;">	 * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">filePath</span><span style="color:#676E95;"> The location to create the file in the user&#39;s project</span></span>
<span class="line"><span style="color:#676E95;">	 * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#676E95;"> The data to write to this file when it is created</span></span>
<span class="line"><span style="color:#676E95;">	 * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">opts</span><span style="color:#676E95;"> An object containing additional options when creating the file</span></span>
<span class="line"><span style="color:#676E95;">	 */</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">createFile</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#A6ACCD;">filePath</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">File</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#A6ACCD;">opts</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IPresetFileOpts</span></span>
<span class="line"><span style="color:#A6ACCD;">	) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;">	 * Expands a file at the specified path</span></span>
<span class="line"><span style="color:#676E95;">	 * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">filePath</span><span style="color:#676E95;"> The location to expand the file in the user&#39;s project</span></span>
<span class="line"><span style="color:#676E95;">	 * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#676E95;"> The data to append or merge to the file</span></span>
<span class="line"><span style="color:#676E95;">	 * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">opts</span><span style="color:#676E95;"> An object containing additional options when expanding the file</span></span>
<span class="line"><span style="color:#676E95;">	 */</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">expandFile</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#A6ACCD;">filePath</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#A6ACCD;">opts</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IPresetFileOpts</span></span>
<span class="line"><span style="color:#A6ACCD;">	) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;">	 * Creates a JSON file at the specified path</span></span>
<span class="line"><span style="color:#676E95;">	 * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">filePath</span><span style="color:#676E95;"> The location to create the file in the user&#39;s project</span></span>
<span class="line"><span style="color:#676E95;">	 * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#676E95;"> The parsed JSON data to be written to the file</span></span>
<span class="line"><span style="color:#676E95;">	 * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">opts</span><span style="color:#676E95;"> An object containing additional options when creating the file &lt;link&gt;Test&lt;/link&gt;</span></span>
<span class="line"><span style="color:#676E95;">	 */</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">createJSONFile</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#A6ACCD;">filePath</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#A6ACCD;">opts</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IPresetFileOpts</span></span>
<span class="line"><span style="color:#A6ACCD;">	) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;">	 * Loads a file from within the preset that this script is ran inside</span></span>
<span class="line"><span style="color:#676E95;">	 * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">filePath</span><span style="color:#676E95;"> The path of the file to load</span></span>
<span class="line"><span style="color:#676E95;">	 */</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">loadPresetFile</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">filePath</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">File</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;">	 * Key/value pairs of the variables that have been defined in the preset, either through additionalModels or fields</span></span>
<span class="line"><span style="color:#676E95;">	 */</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">models</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Record</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>It is important to note that:</p><ul><li>Both <code>createFile</code> and <code>expandFile</code> behave simlarly to <a href="/extensions/presets/manifest/index.html#createfiles"><code>createFiles</code></a> and <a href="/extensions/presets/manifest/index.html#expandfiles"><code>expandFiles</code></a> inside of the preset manifest.</li><li><code>IPresetFileOpts</code> is the same as the object in <a href="/extensions/presets/manifest/index.html#createfiles"><code>createFiles</code></a> and <a href="/extensions/presets/manifest/index.html#expandfiles"><code>expandFiles</code></a>, with the <a href="/extensions/presets/manifest/index.html#inject"><code>inject</code></a>, <a href="/extensions/presets/manifest/index.html#openfile"><code>openFile</code></a> and <a href="/extensions/presets/manifest/index.html#packpath"><code>packPath</code></a> parameters.</li><li>The functions exposed to a preset script return a promise, therefore you should <code>await</code> them and declare <code>module.exports</code> as an <code>async</code> function.</li></ul><p>An example preset script would look like this, and more examples can be found from our <a href="https://github.com/bridge-core/editor-packages/tree/main/packages/minecraftBedrock/presetScript" target="_blank" rel="noreferrer">built-in preset scripts</a>:</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">createFile</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">loadPresetFile</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">models</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">expandFile</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// Destructure the models to get the variables that we need in this preset script</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">TEXTURE</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">IDENTIFIER</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">PROJECT_PREFIX</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">DEFAULT_TEXTURE</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">PRESET_PATH</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#A6ACCD;">models</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fileName</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`\${</span><span style="color:#A6ACCD;">IDENTIFIER</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">.png</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// If the TEXTURE variable, that should have been defined with a fileInput, hasn&#39;t been set, load the default texture from the preset</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">TEXTURE</span><span style="color:#F07178;">) </span><span style="color:#A6ACCD;">TEXTURE</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">loadPresetFile</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">DEFAULT_TEXTURE</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fileName</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">TEXTURE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fileNameNoExtension</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fileName</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">.png</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">.tga</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">.jpg</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">.jpeg</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">gi</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// Create the texture file in the user&#39;s project</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">createFile</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">textures/blocks/</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">PRESET_PATH</span><span style="color:#89DDFF;">}\${</span><span style="color:#A6ACCD;">fileName</span><span style="color:#89DDFF;">}\`</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">TEXTURE</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		packPath</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">resourcePack</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// Merge data with terrain_texture.json to register the texture key</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">expandFile</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">textures/terrain_texture.json</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">			texture_data</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">				[</span><span style="color:#89DDFF;">\`\${</span><span style="color:#A6ACCD;">PROJECT_PREFIX</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">_</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">IDENTIFIER</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">					textures</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">textures/blocks/</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">PRESET_PATH</span><span style="color:#89DDFF;">}\${</span><span style="color:#A6ACCD;">fileNameNoExtension</span><span style="color:#89DDFF;">}\`</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> packPath</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">resourcePack</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">	)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="handling-input-fields" tabindex="-1">Handling Input Fields <a class="header-anchor" href="#handling-input-fields" aria-hidden="true">#</a></h2><p>When creating your preset, you should have defined inputs in the <a href="/extensions/presets/manifest/index.html#fields"><code>fields</code></a> property of your preset manifest. The variables that you assign these inputs to are accessed through <code>models</code> in a preset script. Here we will go over how to handle each type of input in a preset script.</p><h3 id="text-field" tabindex="-1">Text field <a class="header-anchor" href="#text-field" aria-hidden="true">#</a></h3><p>The <a href="/extensions/presets/manifest/index.html#text-input">text field input</a> is simply assigned as a string.</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> TEXT_FIELD_INPUT </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Logs exactly what the user typed in the input</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(TEXT_FIELD_INPUT)</span></span>
<span class="line"></span></code></pre></div><h3 id="file-input" tabindex="-1">File Input <a class="header-anchor" href="#file-input" aria-hidden="true">#</a></h3><p>The <a href="/extensions/presets/manifest/index.html#file-input">file field input</a> is assigned a <code>File</code> object, which can be handled in a few different ways.</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> FILE_FIELD_INPUT </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Logs the name of the file that the user has input</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(FILE_FIELD_INPUT</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// The createFile function accepts a File in its data parameter, so this would write the data of the file that the user has input</span></span>
<span class="line"><span style="color:#89DDFF;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createFile</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">path/to/dest</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> FILE_FIELD_INPUT</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">packPath</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">behaviorPack</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">openFile</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="number-input" tabindex="-1">Number Input <a class="header-anchor" href="#number-input" aria-hidden="true">#</a></h3><p>The <a href="/extensions/presets/manifest/index.html#number-input">number slider input</a> is simply assigned a number.</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> NUMBER_SLIDER_INPUT </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Logs the number that was selected on the slider</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(NUMBER_SLIDER_INPUT)</span></span>
<span class="line"></span></code></pre></div><h3 id="switch-input" tabindex="-1">Switch Input <a class="header-anchor" href="#switch-input" aria-hidden="true">#</a></h3><p>The <a href="/extensions/presets/manifest/index.html#switch-input">switch input</a> is simply assigned a boolean.</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> SWITCH_INPUT </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> (SWITCH_INPUT) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// Do something if the switch was turned on</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// Do something if the switch was turned off</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="select-input" tabindex="-1">Select Input <a class="header-anchor" href="#select-input" aria-hidden="true">#</a></h3><p>The <a href="/extensions/presets/manifest/index.html#select-input">select input</a> is assigned a string representing the chosen option. You will see that the value will depend on how the <a href="/extensions/presets/manifest/index.html#options"><code>options</code></a> were defined.</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> SELECT_INPUT </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Logs the selected option&#39;s &quot;value&quot; field, if defined. Otherwise it will be the display text of the option</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(SELECT_INPUT)</span></span>
<span class="line"></span></code></pre></div>`,34),o=[p];function t(c,r,i,y,D,F){return n(),a("div",null,o)}const d=s(l,[["render",t]]);export{A as __pageData,d as default};
